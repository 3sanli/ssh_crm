<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd ">
	<!-- 完全将struts对象交给spring容器管理切记Action类要配置成多例 -->
	<bean name="userDao" class="cn.system.dao.impl.UserDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
		<property name="hibernateTemplate" ref="hibernateTemplate"></property>
	</bean>
	<bean name="userService" class="cn.system.service.impl.UserServiceImpl">
		<property name="ud" ref="userDao"></property>
	</bean>
	<bean name="userAction" class="cn.system.action.UserAction" scope="prototype">
		<property name="us" ref="userService"></property>
	</bean> 
	
	
	<bean name="customerDao" class="cn.system.dao.impl.CustomerDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
		<property name="hibernateTemplate" ref="hibernateTemplate"></property>
	</bean>
	<bean name="customerService" class="cn.system.service.impl.CustomerServiceImpl">
		<property name="cd" ref="customerDao"></property>
	</bean>
	<bean name="customerAction" class="cn.system.action.CustomerAction" scope="prototype">
		<property name="cs" ref="customerService"></property>
	</bean>
	
	 
	
	<bean name="linkManDao" class="cn.system.dao.impl.LinkManDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
		<property name="hibernateTemplate" ref="hibernateTemplate"></property>
	</bean>
	<bean name="linkManService" class="cn.system.service.impl.LinkManServiceImpl">
		<property name="lkmDao" ref="linkManDao"></property>
		<property name="custDao" ref="customerDao"></property>
	</bean>
	<bean name="linkManAction" class="cn.system.action.LinkManAction" scope="prototype">
		<property name="lkms" ref="linkManService"></property>
	</bean> 
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	<!-- 方式1.将hibernate的配置属性移入到spring中(重要) -->
	<bean name="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				
				
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
		<property name="mappingDirectoryLocations" value="classpath:cn/system/domain"></property>
	</bean>
	
	
	<!-- 方式2.将hibernate的配置属性通过路径的方式导入到spring中(不常用)
	<bean name="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="configLocation" value="classpath:hibernate.cfg.xml"></property>
	</bean>
	 -->
	 
	<context:property-placeholder location="classpath:db.properties"/>
	<bean name="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>	
	
	
	<bean name="hibernateTemplate" class="org.springframework.orm.hibernate5.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<bean name="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="true"/>
			<tx:method name="list*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="true"/>
			
			<tx:method name="add*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false"/>			
			<tx:method name="save*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false"/>
			<tx:method name="modify*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false"/>
			<tx:method name="delete*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false"/>
			
			<tx:method name="*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="true"/>
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut expression="execution(* cn.system.service.impl.*ServiceImpl.*(..))" id="txPc"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPc"/>
	</aop:config>
	
</beans>